http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/


1. (V) Save all leaf nodes of a Binary tree in a Doubly Linked List by using Right node as Next node and Left Node as Previous Node.
2. (V) Given an array,find the maximum j – i such that arr[j] > arr[i]
3. (V) Remove Alternate Duplicate characters from a char array you have to do it in Place.Like keeping only the odd occurences of each character.
        Example: Input: “you got beautiful eyes”Output: ”you gtbeaiful es”
        Allowed Time Complexity was O(n) and Space Complexity was O(1)
4. In a file there are 1 million words . Find 10 most frequent words in that file.

5. Have a list of elements, where an element can be either a char or a another list. eg: [[a, b, c, d], [e], [[f], [g]], [[h], i, [j]]]. Liniarize that list as: [a, b, c, d, e, f, g, h, i, j]

6. Find all nodes at k-distance from a given node in a binary tree
7. Clone a linked list with next and random pointer
8. Serialise and Deserialise a linked list with next and random pointer.
9. Construct a binary tree from given inorder and preorder traversals.
10. Return a tree such that each internal node stores sum of all its child nodes. Each leaf node stores zero.
11. How will you implement linked list with 1 million nodes? How will you access 999999 th node? Give some optimal design strategy and implementation.
12. Reversal of Linked List in groups of K.
13. Given a positive integer N, count all possible distinct binary strings of length N such that there are no consecutive 1’s.
14. Check whether given binary tree is balanced or not. Definition was no two leaves should have height difference of greater than one.
15. Remove duplicates from string in place in O(n).
16. Connect nodes on same level in a binary tree.
17. Find sum of data of all leaves of a binary tree on same level and then multiply sums obtained of all levels.
18. Given a matrix of characters and a word.
you have to count the number of occurrences of that word in that matrix. you can move to any of the eight valid directions from current position.
19. You are given an string as input which represents a path. You have to normalize that path inplace(NO EXTRA SPACE).
         e.g.         input : "\a\b\c\..\..\file.txt"         output: "\a\file.txt"
21. Least common ancestor of two nodes in a binary tree
22. Given two sorted arrays (with repetitive elements) find the kth minimum number from both arrays.
23. Given the root to a binary tree, a value n and k.Find the sum of nodes at distance k from node with value n
24. Find an element in a rotated array
25. Given two linked lists both represent a number. Create a linked list that contains its sum.
26. Given a binary search tree , print the path which has the sum equal to k and has minimum hops. i.e if there are multiple paths with the sum equal to k then print the path with minimum number of nodes.
27. A MxN matrix containing integers (positive, negative and zero’s). For every position containing 0, mark the corresponding row and column as 0.
28. Rotate MxN matrix by 90 degress.
29. Find the nth number that contains the digit k or is divisible by k. (2 <= k <= 9)
30. Write a program to connect next left node in a binary tree. Also first node of each level should be pointing to last node of next level? (Without using Queue)
31. Convert a binary tree to its sum tree(each node is the sum of its children)
32. Given a directed graph. Construct another graph from given graph such that if path exists from vertices A to vertices B and from B to C, then path from A to C and from C to A also should exists.
33. Implement hashmap on your own. Write good hashing function for string.
34. Given an array, arrange the elements such that the number formed by concatenating the elements is highest. 
        E.g.: input = [9, 93, 24, 6], the output should be: [9,93,6,24]. This is because if you concatenate all the numbers, 993624 is the highest number that can be formed.
35. Given a string, find the longest substring which is palindrome.
36. Given that integers are read from a data stream. Find median of elements read so for in efficient way. For simplicity assume there are no duplicates.
37. Write an efficient program for printing k largest elements in an array. Elements in array can be in any order.
38. Given unsorted array and a number K. Find 2 numbers such that sum is K.
39. Given n-ary tree. zigzag level order traversal.
40. Given string s and string t find whether all permutation of t is present as substring in s.
41. Design a stack which holds an integer value such that getMinimum() function should return the minimum element in the stack. Implement popMin() function which would pop minimum element from the original stack.
42. Given a set of intervals like 5-10, 15-20, 25-40, 30-45, 50-100. Find the ith smallest number in these intervals. Assume there are no duplicate numbers.
43. e.g:  1st smallest number = 5     6th smallest number = 10        7th smallest number = 15 and so on. 
44. Given an array which is first strictly increasing and then strictly decreasing. Find an element in this array.
45. Given a string example : shoppingwithflipkartiseasy, Now we are given this string and a dictionary containing valid words , now we need to break the sentence into words separated by space. Output : shopping with flipkart is easy
46. Given a series 2,3,4,5,6,8,9,10,……, here in this series all the numbers are present which have factors only and only either 2,3 or 5. Need to write a node to generate nth number for the series . With best approach and complexity
47. Given a tree with edge weights, find any path in the tree with maximum sum of edges.
48. Merge k sorted arrays.
49. Given a maze, a start point and end point find the shortest path to reach the end point from the starting point.
50. Given a sentence and a set of characters. Find the minimum window within which the set of characters can be found in the sentence in any order.
51. You are given a string of 0’s and 1’s you have to find the number of substrings in the string which starts and end with a 1.
        eg : input : 0010110010output : 6
53. You are given a mapping like a -> 1, b-> 2… z-> 26. You have to print all possible combinations of a given number using the above information.
        eg : input : 121output : aba,la,au
55. Given a dictionary of 50,000 words. Given a phrase without spaces, add spaces to make it a proper sentence.
        e.g:input:  thequickbrownfoxjumpoverlazydog     output: the quick brown fox jump over lazy dog
57. Given an unsorted array of n integers which can contain integers from 1 to n. Some elements can be repeated multiple times and some other elements can be absent from the array. Count frequency of all elements that are present and print the missing elements.
        Examples:Input: arr[] = {2, 3, 3, 2, 5}Output: Below are frequencies of all elements        1 -> 0        2 -> 2        3 -> 2        4 -> 0        5 -> 1
59. Get the next bigger number using the same digits of a number. 
        Eg, For 123456, next number would be 123465
60. Given a boolean 2D matrix, find the number of islands. A group of connected 1s forms an island. For example, the below matrix contains 5 islands
        Input : mat[][] = {1, 1, 0, 0, 0},                  {0, 1, 0, 0, 1},                  {1, 0, 0, 1, 1},{0, 0, 0, 0, 0},{1, 0, 1, 0, 1} Output : 5
62. This problem is know as Clock angle problem where we need to find angle between hands of an analog clock at a given time.
        Examples:Input:  h = 12:00, m = 30.00 Output: 165 degreeInput:  h = 3.00, m = 30.00Output: 75 degree


Netflix
=======
1. Given a file full of these strings:
Vivek 1
Vivek 2
Ajit 3
Krishna 4
Keshav 6
Keshav 7
Print the duplicates and the IDs:
Vivek: 1, 2
Keshav: 6, 7
2. Implement a class Sorter with 2 functions: AddValue & GetValues. GetValues in sorted order. Can assume any data type.
/*
Consider a game of cards where there are n number of players sat around a table playing and a single dealer that is controlling the game. The game can played with a variable number of decks of cards.
If you were to consider writing a simulator for the game using object oriented principles, outline the classes that would be present in the design and how the would relate to each other
*/
Google
======
1. Write an iterator class for finding the inorder successor in a Binary Tree
2. Some testing questions
Given a MxN matrix return the count of islands
0 0 1 1 0 1
0 0 1 1 1 0
1 1 0 0 0 0
Ex: 3 islands in the above matrix (an island has all 1s in the neighboring nodes, not diagonally)
3. Chrome is implementing remote desktop feature where a user can log into another maching through an app installed from Chrome and do remote desktop operations. Test plan for this feature. Had to cover everything - app, RDP (media negotiation), sender side, receiver side etc
4. Given a sorted list of non-overlapping intervals, insert a new interval at the right location if it does not overlap. If it does, return the merged interval.
[3,10] [5,20] [6,40]
If [4,25] --> return [3,10] [5,25] [6,40]
If [1,2] --> return [1,2] [3,10] [5,20] [6,40]
5. Test plan for formatting feature in Google doc (online)
6. Given a sentence reverse the order of words
I am Vivek
Vivek am I
7. Assume Google is implementing push to update OS on Android phones. Design a test plan to test this.
8. Write code to find the deepest node in a binary tree (depth first traversal only)
9. Last interviewer
Find the longest substring in a string with only 2 varying characters
aaabbbcccdddddd ==> cccddddd
10. In a BST with integer values, given a float value return the node with the closest value
LinkedIn
========
1. /**
* Return the sum of all integers from a random String. Continuous Integers must be considered as one number.
* If the input String does not have any Integers, return 0.
* You may ignore decimals, float, and other non-integer numbers
* @param str : Input String
*
* Given the following inputs, we expect the corresponding output:
* "1a2b3c" => 6 (1+2+3)
* "123ab!45c" => 168 (123+45)
* "abcdef" => 0 (no Integers in String)
* "0123.4" => 127 (0123+4)
* "dFD$#23+++12@#T1234;/.,10" => 1279 (23+12+1234+10)
*/
Apple
=====
1. Given a string of words print the # of occurances of each word
2. Write a parser for validating if an XML is wellformed or not
Amazon
======
1. What is a priority queue? How will you implement it? Complexity of each implementation.
2. Implement atoi
3. Given an unsorted array of integers with each value occuring even number of times except for one of them which occurs odd number of times. Return the element which occurs odd number of times.
Ex: 3 1 3 4 4 0 0 ==> return 1
4. Question: Curly braces can be used in programming to provide scope-limit. Write a function to print all valid( properly opened and closed) combinations of n-pairs of curly braces.
Example:
input: 1 output: {}
input: 2 output: {}{}, {{}}
input: 3 output: {}{}{}, {}{{}}, {{}}{}, {{}{}}, {{{}}}
5. Test a Coke vending machine
Apple
=====
What frameworks I've built in the past?
Given a collection of tiles and collection of points, how will you find if a a tile has any points in it?
Code up palindrome
Given a huge JSON file, write a way to serialize paths
Ex: { k1 : '1234',
k2 :
{ k3 : '123',
k4 : 'abc'
}
k3 : 'sddd',
}
output: k1 -> k2.k3 -> k2.k4, k3
Explain my approach to testing in the past. Dev hooks, api layer, abstraction etc
Write a class for implementing LRU cache. What methods will be there? How will you test it?
Given a collection of points, return the k closest points to a given point
How did I deal with an ambiguous situation
What is my approach to solving a big daunting problem
Amazon
======
Given a dictionary of words. There can be duplicates. Given a bag of letters. There can be duplicates. Print the length of the longest valid dictionary word that can be formed from the bag.
Design contacts feature in a phone
Given a 4 way signal, design the signal controller
Lots of behavioral questions / utilize PAR STAR framework with the Amazon leadership skills as a basis.
How will test search in Amazon (given 2 hours)
Given an alarm service with few APIs. Test the APIs + the Alarm App
Given a conveyor belt with boxes coming in an Amazon wearhouse. Each box has 2 labels. Order # + UPCs of all items in the box. A scanner reads these labels and sends it a webservice to validate that the UPCs belong to the order. The webservice returns true or false. if true, it puts the box in success belt else puts it in failure belt. Test this system.


1 Find all the combinations of size k of a word which are also palindromes? (Again variants asked by 2 companies)
2 (Edit 1) Implement FindSubstring function which finds all the occurrences, catch is that substring can contain wild card character which can match with any characters. "a*c" appears in "axycac" at index 0 and 4
3 (Edit 2) You have 32 TB worth of integer data on network shared storage that needs to be sorted. You have 4 machines with 8 TB storage on each and 2GB RAM How would you use them to sort the data.
3 (Edit 3) Given an inverted non balanced BST (left side is greater, right side is smaller) convert it in to a true and mostly balanced BST.

